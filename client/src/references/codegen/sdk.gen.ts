// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type OptionsLegacyParser } from '@hey-api/client-fetch';
import type { PostApiAuthRegisterData, PostApiAuthRegisterError, PostApiAuthRegisterResponse, PostApiAuthLoginData, PostApiAuthLoginError, PostApiAuthLoginResponse, PostApiAuthRefreshData, PostApiAuthRefreshError, PostApiAuthRefreshResponse, MapIdentityApiApiAuthConfirmEmailData, MapIdentityApiApiAuthConfirmEmailError, MapIdentityApiApiAuthConfirmEmailResponse, PostApiAuthResendConfirmationEmailData, PostApiAuthResendConfirmationEmailError, PostApiAuthResendConfirmationEmailResponse, PostApiAuthForgotPasswordData, PostApiAuthForgotPasswordError, PostApiAuthForgotPasswordResponse, PostApiAuthResetPasswordData, PostApiAuthResetPasswordError, PostApiAuthResetPasswordResponse, PostApiAuthManage2FaData, PostApiAuthManage2FaError, PostApiAuthManage2FaResponse, GetApiAuthManageInfoError, GetApiAuthManageInfoResponse, PostApiAuthManageInfoData, PostApiAuthManageInfoError, PostApiAuthManageInfoResponse, PostApiAuthLogoutData, PostApiAuthLogoutError, PostApiAuthLogoutResponse, GetApiAuthMeError, GetApiAuthMeResponse, GetApiTodoItemsError, GetApiTodoItemsResponse, PostApiTodoItemsData, PostApiTodoItemsError, PostApiTodoItemsResponse, GetApiTodoItemsByIdData, GetApiTodoItemsByIdError, GetApiTodoItemsByIdResponse, PutApiTodoItemsByIdData, PutApiTodoItemsByIdError, PutApiTodoItemsByIdResponse, DeleteApiTodoItemsByIdData, DeleteApiTodoItemsByIdError, DeleteApiTodoItemsByIdResponse } from './types.gen';

export const client = createClient(createConfig());

export const postApiAuthRegister = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostApiAuthRegisterData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAuthRegisterResponse, PostApiAuthRegisterError, ThrowOnError>({
        ...options,
        url: '/api/auth/register'
    });
};

export const postApiAuthLogin = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostApiAuthLoginData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAuthLoginResponse, PostApiAuthLoginError, ThrowOnError>({
        ...options,
        url: '/api/auth/login'
    });
};

export const postApiAuthRefresh = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostApiAuthRefreshData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAuthRefreshResponse, PostApiAuthRefreshError, ThrowOnError>({
        ...options,
        url: '/api/auth/refresh'
    });
};

export const mapIdentityApiApiAuthConfirmEmail = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<MapIdentityApiApiAuthConfirmEmailData, ThrowOnError>) => {
    return (options?.client ?? client).get<MapIdentityApiApiAuthConfirmEmailResponse, MapIdentityApiApiAuthConfirmEmailError, ThrowOnError>({
        ...options,
        url: '/api/auth/confirmEmail'
    });
};

export const postApiAuthResendConfirmationEmail = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostApiAuthResendConfirmationEmailData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAuthResendConfirmationEmailResponse, PostApiAuthResendConfirmationEmailError, ThrowOnError>({
        ...options,
        url: '/api/auth/resendConfirmationEmail'
    });
};

export const postApiAuthForgotPassword = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostApiAuthForgotPasswordData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAuthForgotPasswordResponse, PostApiAuthForgotPasswordError, ThrowOnError>({
        ...options,
        url: '/api/auth/forgotPassword'
    });
};

export const postApiAuthResetPassword = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostApiAuthResetPasswordData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAuthResetPasswordResponse, PostApiAuthResetPasswordError, ThrowOnError>({
        ...options,
        url: '/api/auth/resetPassword'
    });
};

export const postApiAuthManage2Fa = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostApiAuthManage2FaData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAuthManage2FaResponse, PostApiAuthManage2FaError, ThrowOnError>({
        ...options,
        url: '/api/auth/manage/2fa'
    });
};

export const getApiAuthManageInfo = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAuthManageInfoResponse, GetApiAuthManageInfoError, ThrowOnError>({
        ...options,
        url: '/api/auth/manage/info'
    });
};

export const postApiAuthManageInfo = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PostApiAuthManageInfoData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAuthManageInfoResponse, PostApiAuthManageInfoError, ThrowOnError>({
        ...options,
        url: '/api/auth/manage/info'
    });
};

export const postApiAuthLogout = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiAuthLogoutData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiAuthLogoutResponse, PostApiAuthLogoutError, ThrowOnError>({
        ...options,
        url: '/api/auth/logout'
    });
};

export const getApiAuthMe = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiAuthMeResponse, GetApiAuthMeError, ThrowOnError>({
        ...options,
        url: '/api/auth/me'
    });
};

export const getApiTodoItems = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiTodoItemsResponse, GetApiTodoItemsError, ThrowOnError>({
        ...options,
        url: '/api/TodoItems'
    });
};

export const postApiTodoItems = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiTodoItemsData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiTodoItemsResponse, PostApiTodoItemsError, ThrowOnError>({
        ...options,
        url: '/api/TodoItems'
    });
};

export const getApiTodoItemsById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetApiTodoItemsByIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiTodoItemsByIdResponse, GetApiTodoItemsByIdError, ThrowOnError>({
        ...options,
        url: '/api/TodoItems/{id}'
    });
};

export const putApiTodoItemsById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiTodoItemsByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiTodoItemsByIdResponse, PutApiTodoItemsByIdError, ThrowOnError>({
        ...options,
        url: '/api/TodoItems/{id}'
    });
};

export const deleteApiTodoItemsById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiTodoItemsByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiTodoItemsByIdResponse, DeleteApiTodoItemsByIdError, ThrowOnError>({
        ...options,
        url: '/api/TodoItems/{id}'
    });
};